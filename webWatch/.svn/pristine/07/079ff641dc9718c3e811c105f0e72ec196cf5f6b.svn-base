package com.watch.controller;

import ch.qos.logback.classic.Logger;
import com.watch.bean.Watch;
import com.watch.common.bean.Pager4EasyUI;
import com.watch.service.WatchService;
import org.apache.ibatis.annotations.Param;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.annotation.Resource;

/**
 * Created by Administrator on 2017/3/18 0018.
 */
@Controller
@RequestMapping("/watch")
public class WatchController {

    private Logger logger = (Logger) LoggerFactory.getLogger(WatchController.class);

    @Resource
    private WatchService watchService;

    /**
     * 查询手表列表*/
    @RequestMapping(value = "Watchs",method = RequestMethod.GET)
    public String redirectWatch(Model model) {
        return "/watch/Watchs";
    }

    /**
     * 查看手表详情*/
    @RequestMapping(value = "details",method = RequestMethod.GET)
    public String redirectDetails(Model model) {
        return "/watch/pro-details";
    }


    /**
     * 查看论坛*/
    @RequestMapping(value = "forum",method = RequestMethod.GET)
    public String redirectForum(Model model) {
        return "/watch/forum";
    }


    /**
     * 查看论坛详情*/
    @RequestMapping(value = "fontDetails",method = RequestMethod.GET)
    public String redirectFontDetails(Model model) {
        return "/watch/font-details";
    }


    /**
     * 手表管理页面*/
    @RequestMapping(value = "watch_page",method = RequestMethod.GET)
    public String showWatch(Model model) {
        return "/admin-page/watch-all";
    }


    @ResponseBody
    @RequestMapping(value="query_pager",method=RequestMethod.GET)
    public Pager4EasyUI<Watch> queryPager(@Param("page")String page, @Param("rows")String rows){
        logger.info("分页查询所有产品");
        Pager4EasyUI<Watch> pager = new Pager4EasyUI<Watch>();
        pager.setPageNo(Integer.valueOf(page));
        pager.setPageSize(Integer.valueOf(rows));
        Watch Watch = new Watch();
        //Watch.setName("2");
        pager = watchService.queryByPagerAndCriteria(pager,Watch);
        return pager;
    }

}






















